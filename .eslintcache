[{"/Users/sarastrasner/codefellows/401/todoApp/src/index.js":"1","/Users/sarastrasner/codefellows/401/todoApp/src/App.js":"2","/Users/sarastrasner/codefellows/401/todoApp/src/context/auth/auth-context.js":"3","/Users/sarastrasner/codefellows/401/todoApp/src/context/auth/login.js":"4","/Users/sarastrasner/codefellows/401/todoApp/src/context/auth/auth.js":"5","/Users/sarastrasner/codefellows/401/todoApp/src/components/if/if.js":"6","/Users/sarastrasner/codefellows/401/todoApp/src/components/todo.js":"7","/Users/sarastrasner/codefellows/401/todoApp/src/context/settings/context.js":"8","/Users/sarastrasner/codefellows/401/todoApp/src/components/list.js":"9","/Users/sarastrasner/codefellows/401/todoApp/src/components/form.js":"10","/Users/sarastrasner/codefellows/401/todoApp/src/components/hooks/ajax.js":"11","/Users/sarastrasner/codefellows/401/todoApp/src/components/header/header.js":"12","/Users/sarastrasner/codefellows/401/todoApp/src/components/footer/footer.js":"13","/Users/sarastrasner/codefellows/401/todoApp/src/components/sortbar/sortbar.js":"14"},{"size":200,"mtime":1611282683839,"results":"15","hashOfConfig":"16"},{"size":601,"mtime":1611379393022,"results":"17","hashOfConfig":"16"},{"size":1977,"mtime":1611283912297,"results":"18","hashOfConfig":"16"},{"size":1844,"mtime":1611363686861,"results":"19","hashOfConfig":"16"},{"size":754,"mtime":1611283922261,"results":"20","hashOfConfig":"16"},{"size":525,"mtime":1611379527751,"results":"21","hashOfConfig":"16"},{"size":1557,"mtime":1611418001258,"results":"22","hashOfConfig":"16"},{"size":1038,"mtime":1611283936139,"results":"23","hashOfConfig":"16"},{"size":3585,"mtime":1611377516403,"results":"24","hashOfConfig":"16"},{"size":1367,"mtime":1611283850631,"results":"25","hashOfConfig":"16"},{"size":872,"mtime":1611283884778,"results":"26","hashOfConfig":"16"},{"size":266,"mtime":1611418783712,"results":"27","hashOfConfig":"16"},{"size":393,"mtime":1611285167502,"results":"28","hashOfConfig":"16"},{"size":1064,"mtime":1611378486718,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"eonksz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/sarastrasner/codefellows/401/todoApp/src/index.js",[],["62","63"],"/Users/sarastrasner/codefellows/401/todoApp/src/App.js",["64"],"import React from 'react';\nimport './App.scss';\nimport Login from './context/auth/login';\nimport LoginContext from './context/auth/auth-context';\nimport If from './components/if/if';\nimport Auth from './context/auth/auth-context'\n\nfunction App() {\n  const DeleteLink = props => {\n    return (\n      <Auth capability='delete'>\n        <button>delete</button>\n      </Auth>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <LoginContext>\n          <Login />\n          {/* <DeleteLink /> */}\n          <If />\n        </LoginContext>\n\n      </div>\n\n    </>\n  );\n}\n\n\nexport default App;","/Users/sarastrasner/codefellows/401/todoApp/src/context/auth/auth-context.js",[],"/Users/sarastrasner/codefellows/401/todoApp/src/context/auth/login.js",["65","66"],"import React, { useContext, useState } from 'react';\nimport { setRawCookie } from 'react-cookies';\nimport { LoginContext } from './auth-context';\nimport cookie from 'react-cookies';\nimport Card from 'react-bootstrap/Card';\nimport './login.scss';\n\n// perhaps I should make some context to keep track of people logging in and out\n// this should just be a form\n\nfunction Login(props) {\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const loginContext = useContext(LoginContext);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // send username and password to context\n    loginContext.login(username, password);\n  };\n\n  const handleNameChange = e => {\n    setUserName(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleLogout = () => {\n    cookie.remove();\n    loginContext.setLogInState(false, null, {});\n  };\n\n  return (\n    <>\n      {loginContext.loggedIn ? (\n        ''\n      ) : (\n        // <button onClick={handleLogout}>Sign Out</button>\n        <Card>\n          <h1>\n            <Card.Header id=\"welcome\">Welcome to the To Do App</Card.Header>\n          </h1>\n          <Card.Body>\n            <Card.Title>Please sign in to continue</Card.Title>\n            <form onSubmit={handleSubmit}>\n              <label>\n                Username\n                <input onChange={handleNameChange} type=\"text\" name=\"name\" />\n              </label>\n              <label>\n                Password\n                <input\n                  onChange={handlePasswordChange}\n                  type=\"password\"\n                  name=\"password\"\n                />\n              </label>\n              <button>Sign in</button>\n            </form>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n}\n\nexport default Login;\n","/Users/sarastrasner/codefellows/401/todoApp/src/context/auth/auth.js",[],"/Users/sarastrasner/codefellows/401/todoApp/src/components/if/if.js",[],"/Users/sarastrasner/codefellows/401/todoApp/src/components/todo.js",[],"/Users/sarastrasner/codefellows/401/todoApp/src/context/settings/context.js",[],"/Users/sarastrasner/codefellows/401/todoApp/src/components/list.js",["67","68","69"],"import React, { useState, useContext } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Badge from 'react-bootstrap/Badge';\nimport { AppSettingsContext } from '../context/settings/context';\nimport useAjaxCalls from './hooks/ajax';\nimport Sortbar from './sortbar/sortbar';\n\nfunction TodoList(props) {\n  const [URL, list, setList, addItem] = useAjaxCalls();\n  const appSettingsContext = useContext(AppSettingsContext);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const page = props.list.slice(\n    appSettingsContext.itemsPerScreen * currentPage,\n    appSettingsContext.itemsPerScreen * (currentPage + 1)\n  );\n\n  // const updateSortMethod = e => {\n  //   e.preventDefault();\n  //   appSettingsContext.setDefaultSort(e.target.value);\n  // };\n\n  // const updateCompleted = e => {\n  //   appSettingsContext.setCompleted(e.target.value);\n  //   //TO DO: if props.list.complete is true, hide that item\n  // };\n\n  // const radioSubmit = e => {\n  //   e.preventDefault();\n  //   renderSortMethod();\n  // };\n\n  const renderSortMethod = e => {\n    console.log('render sort!!!')\n    if (appSettingsContext.defaultSortField === 'difficulty') {\n      let result = props.list.sort((a, b) =>\n        a.difficulty > b.difficulty ? 1 : -1\n      );\n      setList([result]);\n    } else if (appSettingsContext.defaultSortField === 'assignee') {\n      let result = props.list.sort((a, b) =>\n        a.assignee > b.assignee ? 1 : -1\n      );\n      setList([result]);\n    } else if (appSettingsContext.defaultSortField === 'status') {\n      let result = props.list.sort((a, b) =>\n        a.complete > b.complete ? 1 : -1\n      );\n      setList([result]);\n    }\n  };\n\n  const nextPage = e => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  const previousPage = e => {\n    setCurrentPage(currentPage - 1);\n  };\n\n  return (\n    <div>\n      <Sortbar renderSortMethod={renderSortMethod}></Sortbar>\n      {/* <form onSubmit={radioSubmit}>\n        <label for=\"sort\">Choose a sort method:</label>\n        <input type=\"radio\" onClick={updateSortMethod} value=\"difficulty\" />\n        Difficulty\n        <input type=\"radio\" onClick={updateSortMethod} value=\"assignee\" />\n        Assignee\n        <input type=\"radio\" onClick={updateSortMethod} value=\"status\" />\n        Status\n        <button type=\"submit\">Sort</button>\n      </form>\n      <div>\n        <button onClick={updateCompleted} value=\"false\">\n          Hide completed items\n        </button> */}\n\n      {page.map(item => (\n        <Modal.Dialog>\n          <Modal.Header\n            closeButton\n            onClick={() => props.handleDelete(item._id)}\n          >\n            <Modal.Title>\n              {item.complete ? (\n                <Badge pill variant=\"success\">\n                  Complete\n                </Badge>\n              ) : (\n                <Badge pill variant=\"danger\">\n                  Pending\n                </Badge>\n              )}\n              {item.assignee}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body\n            className={`complete-${item.complete.toString()}`}\n            key={item._id}\n          >\n            <span onClick={() => props.handleComplete(item._id)}>\n              {item.text} difficulty: {item.difficulty}\n            </span>\n          </Modal.Body>\n        </Modal.Dialog>\n      ))}\n      {currentPage > 0 ? (\n        <button onClick={previousPage}>Previous Page</button>\n      ) : null}\n      {props.list.length > (currentPage + 1) * 3 ? (\n        <button onClick={nextPage}>Next Page</button>\n      ) : null}\n    </div>\n  );\n}\n\nexport default TodoList;\n","/Users/sarastrasner/codefellows/401/todoApp/src/components/form.js",[],"/Users/sarastrasner/codefellows/401/todoApp/src/components/hooks/ajax.js",[],"/Users/sarastrasner/codefellows/401/todoApp/src/components/header/header.js",[],"/Users/sarastrasner/codefellows/401/todoApp/src/components/footer/footer.js",[],"/Users/sarastrasner/codefellows/401/todoApp/src/components/sortbar/sortbar.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":9,"column":9,"nodeType":"76","messageId":"77","endLine":9,"endColumn":19},{"ruleId":"74","severity":1,"message":"78","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":22},{"ruleId":"74","severity":1,"message":"79","line":30,"column":9,"nodeType":"76","messageId":"77","endLine":30,"endColumn":21},{"ruleId":"74","severity":1,"message":"80","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":13},{"ruleId":"74","severity":1,"message":"81","line":9,"column":15,"nodeType":"76","messageId":"77","endLine":9,"endColumn":19},{"ruleId":"74","severity":1,"message":"82","line":9,"column":30,"nodeType":"76","messageId":"77","endLine":9,"endColumn":37},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'DeleteLink' is assigned a value but never used.","Identifier","unusedVar","'setRawCookie' is defined but never used.","'handleLogout' is assigned a value but never used.","'URL' is assigned a value but never used.","'list' is assigned a value but never used.","'addItem' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]